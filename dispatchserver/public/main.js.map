{"version":3,"sources":["ws (ignored)","./src/app/components/games/cardgames/red-flags/red-flags.component.ts","./src/app/components/games/cardgames/red-flags/red-flags.component.html","./src/app/components/dialogs/changepp/change-ppdialog/change-ppdialog.component.ts","./src/app/components/dialogs/changepp/change-ppdialog/change-ppdialog.component.html","./src/app/models/pppics/PpPic.ts","./src/app/components/games/cardgames/tycoon/tycoon.component.ts","./src/app/components/games/cardgames/tycoon/tycoon.component.html","./src/app/models/games/Games.ts","./src/environments/environment.ts","./src/app/components/dialogs/GameDialogs/confirm-leave/confirm-leave.component.ts","./src/app/components/dialogs/GameDialogs/confirm-leave/confirm-leave.component.html","./src/app/directives/game.directive.ts","./src/app/components/dialogs/failed-to-send-request/failed-to-send-request.component.ts","./src/app/components/dialogs/failed-to-send-request/failed-to-send-request.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/illegal-page/illegal-page.component.ts","./src/app/components/illegal-page/illegal-page.component.html","./src/app/components/dialogs/invalid-name/invalid-name.component.ts","./src/app/components/dialogs/invalid-name/invalid-name.component.html","./src/app/app.module.ts","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/test-page/test-page.component.ts","./src/app/components/test-page/test-page.component.html","./src/app/components/dialogs/GameDialogs/single-input-dialog/single-input-dialog.component.ts","./src/app/components/dialogs/GameDialogs/single-input-dialog/single-input-dialog.component.html","./src/app/services/sockets.service.ts","./src/app/components/redirect-page/redirect-page.component.ts","./src/app/components/redirect-page/redirect-page.component.html","./src/app/components/games/room-creator/room-creator.component.ts","./src/app/components/games/room-creator/room-creator.component.html","./src/app/components/games/room-selector/room-selector.component.ts","./src/app/components/games/room-selector/room-selector.component.html","./src/app/datastructures/Queue.ts","./src/app/components/dialogs/GameDialogs/spectator-join/spectator-join.component.ts","./src/app/components/dialogs/GameDialogs/spectator-join/spectator-join.component.html","./src/app/components/dialogs/GameDialogs/spec-or-play/spec-or-play.component.ts","./src/app/components/dialogs/GameDialogs/spec-or-play/spec-or-play.component.html","./src/app/components/games/game-page/game-page.component.ts","./src/app/components/games/game-page/game-page.component.html","./src/app/components/dialogs/change-name/change-name.component.ts","./src/app/components/dialogs/change-name/change-name.component.html","./src/app/components/games/cardgames/poker/poker.component.ts","./src/app/components/games/cardgames/poker/poker.component.html","./src/app/app-routing.module.ts","./src/app/services/game/gamerequests.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/* (ignored) */","import { ThisReceiver } from '@angular/compiler';\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { SingleInputDialogComponent } from 'src/app/components/dialogs/GameDialogs/single-input-dialog/single-input-dialog.component';\nimport { SpecOrPlayComponent } from 'src/app/components/dialogs/GameDialogs/spec-or-play/spec-or-play.component';\nimport { SpectatorJoinComponent } from 'src/app/components/dialogs/GameDialogs/spectator-join/spectator-join.component';\nimport { GamerequestsService } from 'src/app/services/game/gamerequests.service';\n\n@Component({\n  selector: 'app-red-flags',\n  templateUrl: './red-flags.component.html',\n  styleUrls: ['./red-flags.component.css']\n})\nexport class RedFlagsComponent {\n\n  avaliableDecks: {text: string, checked: boolean}[] = [\n    {text: \"Base Deck\", checked:true}, \n    {text: \"Test Deck\", checked:false},\n    {text: \"Custom Dirty Deck\", checked:false},\n    {text: \"Ang's Deck\", checked:false},\n    {text: \"Tortino's Deck\", checked:false}\n  ];\n\n  roomId: number\n  playerId: number = 0\n  responsibilitypid = 0\n\n  players: { name: string, points: number, status: string }[]\n\n  currentDater: string = \"player not found\";\n  isCurrentDater: boolean = false;\n\n  inprogress: boolean = false;\n  canStart: boolean = false;\n  playersselecting: boolean = true;\n  canChose: boolean = false;\n  hideNames: boolean = false;\n\n  perkSelection = true;\n\n  perks: { content: string }[] = [];\n  flags: { content: string }[] = [];\n\n  selectedPerk = -1;\n  selectedFlag = -1;\n\n  showTableCards = true;\n\n  tableCards: {\n    pid: number;\n    playername: string;\n    perks: { content: string };\n    flags: { content: string };\n    flagsbyname: string;\n    flagspid: number;\n  }[];\n\n  hideNamesCheck: boolean = false;\n\n  points: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\"),\n    Validators.min(1)\n  ]);\n\n  constructor(private gr: GamerequestsService, private route: ActivatedRoute, private matdialog: MatDialog) {\n    this.createFunctions();\n\n    var self = this;\n\n    this.route.queryParams\n      .subscribe(params => {\n        this.roomId = params.r;\n      });\n\n    if (!this.gr.setup(this.roomId)) {\n\n      this.gr.requestJoinDetails(function (data) {\n\n        if (data) {\n\n          //send specorplay\n          var ref = matdialog.open(SpecOrPlayComponent, { data: false });\n          ref.afterClosed().subscribe(result => {\n\n            if (result) {\n              //they want to play\n              console.log(\"play\");\n\n              self.gr.requestJoin(function (result) {\n\n                if (result.success) {\n                  self.playerId = result.pid;\n                  self.gr.setStorage(self.playerId);\n\n                  self.gr.sendData(\n                    {\n                      rid: self.roomId,\n                      type: \"INFOCHANGE\",\n                      pid: self.playerId,\n                      name: localStorage.getItem(AppComponent.LOCAL_USERNAME_STORE)\n                    });\n                  self.gr.startWatchPrivate(self.onPrivateUpdate);\n                  self.gr.requestPrivateUpdate(self.playerId);\n                } else {\n                  console.log(\"failed\");\n                  matdialog.open(SpectatorJoinComponent);\n                }\n\n                self.gr.startWatch(self.onGameUpdate);\n                self.gr.requestUpdate();\n              });\n\n            } else {\n              //they dont want to play\n              console.log(\"Spec\");\n              self.gr.startWatch(self.onGameUpdate);\n              self.gr.requestUpdate();\n            }\n          });\n\n        } else {\n          //tell spec only\n          self.gr.startWatch(self.onGameUpdate);\n          self.gr.requestUpdate();\n          matdialog.open(SpectatorJoinComponent);\n        }\n      });\n\n    } else {\n      this.playerId = this.gr.getPid();\n      this.gr.startWatch(this.onGameUpdate);\n      this.gr.sendData({\n        rid: self.roomId,\n        type: \"SOCKETCHANGE\",\n        pid: self.playerId\n      });\n      this.gr.startWatchPrivate(this.onPrivateUpdate);\n      this.gr.requestUpdate();\n      this.gr.requestPrivateUpdate(this.playerId);\n      console.log(\"play\");\n    }\n\n  }\n\n  createFunctions() {\n    var self = this;\n\n    this.onGameUpdate = function (data) {\n      self.players = data.players;\n      //TODO CHANGE\n      self.canStart = self.players.length >= 1;\n\n      self.inprogress = data.progress;\n\n      self.isCurrentDater = self.playerId == data.currentDaterId;\n      self.currentDater = data.currentDaterName;\n      self.tableCards = data.GameTableCards;\n      self.playersselecting = data.playersselecting;\n      self.perkSelection = data.perkSelection;\n      self.showTableCards = data.showcards;\n      self.canChose = data.canChoose;\n      self.hideNames = data.hideNames;\n    }\n\n    this.onPrivateUpdate = function (data) {\n      console.log(\"private\");\n      self.perks = data.perks;\n      self.flags = data.flags;\n      self.responsibilitypid = data.responsibility;\n    }\n  }\n\n  startButton() {\n\n    if (this.points.invalid) {\n      this.points.markAsTouched();\n      return;\n    }\n\n    if(!this.anyDeckSelected()) {\n      alert(\"You must select at least 1 Deck\");\n      return;\n    }\n\n    if(this.players.length < 3) {\n      alert(\"Not enough players: min 3\");\n      return;\n    }\n\n    this.gr.sendData({\n      rid: this.roomId,\n      type: \"GAMESTART\",\n      points: this.points.value,\n      decks: this.getDeckData(),\n      hideNames: this.hideNamesCheck\n    });\n  }\n\n  anyDeckSelected() {\n    for(let d of this.avaliableDecks) {\n      if(d.checked) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  getDeckData() {\n    var decks = [];\n    for(let d of this.avaliableDecks) {\n      if(d.checked) {\n        decks.push(d.text);\n      }\n    }\n    return decks;\n  }\n\n  chooseCardPerk(index: number) {\n    if (this.playersselecting && this.perkSelection) {\n      this.selectedPerk = index;\n    }\n  }\n\n  chooseCardFlag(index: number) {\n    if (this.playersselecting && !this.perkSelection) {\n      this.selectedFlag = index;\n    }\n  }\n\n  submitSelection() {\n    if (this.playersselecting && !(this.selectedPerk == -1 && this.selectedFlag == -1)) {\n\n      var card = (this.perkSelection) ? this.perks[this.selectedPerk] : this.flags[this.selectedFlag];\n\n      var self = this;\n\n      if (card.content.indexOf(\"_____\") > -1) {\n        const dialogRef = this.matdialog.open(SingleInputDialogComponent, { data: { title: \"Fill in the Blank of your card\", output: \"\", cancel: true } })\n\n        dialogRef.afterClosed().subscribe((result) => {\n          if(!result.cancel) {\n            if(result.output == null || result.output == undefined) {\n              result.output = \"\";\n            }\n            self.sendSelection(result.output);\n          }\n        });\n      } else {\n        this.sendSelection(\"\");\n      }\n    }\n  }\n\n  private sendSelection(data) {\n    this.gr.sendData({\n      rid: this.roomId,\n      type: \"CARDSELECTION\",\n      pid: this.playerId,\n      card: (this.perkSelection) ? this.selectedPerk : this.selectedFlag,\n      cdata: data\n    });\n\n    this.selectedFlag = -1;\n    this.selectedPerk = -1;\n  }\n\n  submitDate(pid) {\n    this.gr.sendData({\n      rid: this.roomId,\n      type: \"WINNERCHOOSE\",\n      winner: pid\n    });\n    this.canChose = false;\n  }\n\n  //functions\n  onGameUpdate;\n  onPrivateUpdate;\n\n}","<div id=\"topArea\">\n    <div id=\"PlayerArea\">\n\n        <mat-list style=\"padding-top: 0;\">\n            <div id=\"GameHeader\">Players</div>\n\n            <div *ngFor=\"let p of players\">\n                <mat-list-item class=\"playernames\" [ngClass]=\"{'selectedCard': p.highlight}\">\n                    <div class=\"nameholder\">\n\n                        <div class=\"leftName\"><strong>{{p.name}}</strong><br />Points: {{p.points}}</div>\n                        <div class=\"rightStatus\">{{p.status}}</div>\n                    </div>\n\n                </mat-list-item>\n                <mat-divider></mat-divider>\n            </div>\n        </mat-list>\n\n    </div>\n\n    <div id=\"CardArea\">\n\n        <div id=\"AdminArea\" *ngIf=\"!inprogress\">\n            <mat-form-field style=\"margin: auto; display: block; width: 150px; padding-top: 5%;\">\n                <mat-label>Winning Points</mat-label>\n                <input matInput placeholder=\"E.g 5\" [formControl]=\"points\" required>\n                <mat-error *ngIf=\"points.hasError('pattern')\">\n                    Please enter a valid number\n                </mat-error>\n                <mat-error *ngIf=\"points.hasError('required')\">\n                    value is <strong>required*</strong>\n                </mat-error>\n                <mat-error *ngIf=\"points.hasError('min')\">\n                    value must be greater than or equal to 1\n                </mat-error>\n            </mat-form-field>\n            <mat-checkbox [(ngModel)]=\"hideNamesCheck\" style=\"margin-left: 10px;\">\n                Hide Names?\n            </mat-checkbox>\n            <br>\n            <br>\n            <section>\n                Avaliable Decks<br>\n                <mat-checkbox *ngFor=\"let deck of avaliableDecks\" [(ngModel)]=\"deck.checked\" style=\"margin-left: 10px;\">\n                    {{deck.text}}\n                </mat-checkbox>\n            </section>\n            <button id=\"startButton\" mat-raised-button style=\"background-color: orange;\" [disabled]=\"!canStart\"\n                (click)=\"startButton()\">Start Game</button>\n        </div>\n\n        <div id=\"gameArea\" *ngIf=\"inprogress\">\n\n            <div id=\"GameHeader\">\n                <span *ngIf=\"playersselecting && perkSelection\">Find a date for <strong>{{currentDater}}</strong></span>\n                <span *ngIf=\"playersselecting && !perkSelection\">Ruin the date revealed to you</span>\n                <span *ngIf=\"!playersselecting\"><strong>{{currentDater}}</strong> is choosing the best date</span>\n            </div>\n\n            <div>\n\n                <mat-list style=\"padding-top: 0;\">\n                    <div class=\"cardrow\" *ngFor=\"let tc of tableCards\">\n                        <mat-list-item class=\"cardrow\">\n                            <table class=\"cardholder\">\n                                <tr>\n                                    <td>\n                                        <p *ngIf=\"!hideNames\" class=\"TableNameLeft\"><strong>{{tc.playername}}</strong></p>\n                                        <button *ngIf=\"isCurrentDater && showTableCards && canChose\" mat-raised-button\n                                            style=\"background-color: orange;\"\n                                            (click)=\"submitDate(tc.pid)\">Choose</button>\n                                    </td>\n\n                                    <td *ngFor=\"let tcp of tc.perks; let tci = index\">\n                                        <button style=\"border: none; background-color: transparent;\">\n                                            <div class=\"card whitec\">\n                                                <span\n                                                    *ngIf=\"showTableCards || (tc.pid == playerId && perkSelection) || (tc.pid == responsibilitypid && !perkSelection)\">{{tcp.content}}</span>\n                                            </div>\n                                        </button>\n                                    </td>\n\n                                    <td *ngIf=\"(tc.flags.length > 0 && showTableCards) && !hideNames\">\n                                        <p class=\"TableNameLeft\"><strong>{{tc.flagsbyname}}</strong></p>\n                                    </td>\n\n                                    <td *ngFor=\"let tcf of tc.flags; let tcj = index\">\n                                        <button *ngIf=\"tc.flags.length > 0\"\n                                            style=\"border: none; background-color: transparent;\">\n                                            <div class=\"card redc\">\n                                                <span\n                                                    *ngIf=\"showTableCards || tc.flagspid == playerId\">{{tcf.content}}</span>\n                                            </div>\n                                        </button>\n                                    </td>\n\n                                </tr>\n                            </table>\n                        </mat-list-item>\n                        <mat-divider></mat-divider>\n                    </div>\n                </mat-list>\n\n            </div>\n\n        </div>\n    </div>\n</div>\n\n<div id=\"HandArea\">\n    <table style=\"height: 100%; width: 100%;\" *ngIf=\"inprogress && !isCurrentDater && playerId != 0\">\n        <tr>\n\n            <td class=\"handElement\">\n                <button style=\"background-color: orange; display: block; margin: auto;\" mat-raised-button\n                    (click)=\"submitSelection()\">Submit</button>\n            </td>\n\n            <td *ngFor=\"let p of perks; let i = index\">\n                <button style=\"border: none; background-color: transparent;\" (click)=\"chooseCardPerk(i)\">\n                    <div class=\"card whitec\" [ngClass]=\"{'selectedCard': selectedPerk == i}\">\n                        {{p.content}}\n                    </div>\n                </button>\n            </td>\n\n            <td *ngFor=\"let f of flags; let j = index\">\n                <button style=\"border: none; background-color: transparent;\" (click)=\"chooseCardFlag(j)\">\n                    <div class=\"card redc\" [ngClass]=\"{'selectedCard': selectedFlag == j}\">\n                        {{f.content}}\n                    </div>\n                </button>\n            </td>\n\n        </tr>\n    </table>\n\n    <div id=\"HandWaitDates\" *ngIf=\"inprogress && isCurrentDater\">\n        <h1>You are finding your dream date</h1>\n    </div>\n\n</div>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { PPChangeData } from 'src/app/app.component';\nimport { PpPic } from 'src/app/models/pppics/PpPic';\n@Component({\n  selector: 'app-change-ppdialog',\n  templateUrl: './change-ppdialog.component.html',\n  styleUrls: ['./change-ppdialog.component.css']\n})\nexport class ChangePPDialogComponent {\n\n  validPpPics;\n\n  constructor(public dialogRef: MatDialogRef<PPChangeData>, @Inject(MAT_DIALOG_DATA) public data: PPChangeData) { \n    this.validPpPics = PpPic.validPpPics;\n  }\n\n  onCancel(): void {\n    this.data.Cancelled = true;\n    this.dialogRef.close(this.data);\n  }\n}\n","<h1 mat-dialog-title>Change Profile Picture</h1>\n\n<mat-dialog-content>\n<mat-radio-group class=\"wrapper\" aria-label=\"Select an option\" [(ngModel)]=\"data.NewPP\">\n    <mat-radio-button *ngFor=\"let p of validPpPics; let i = index\" value=\"{{i}}\"><img src=\"{{p}}\"></mat-radio-button>\n</mat-radio-group> \n</mat-dialog-content>\n\n<div mat-dialog-actions align=\"end\">\n    <button mat-button (click)=\"onCancel()\">Cancel</button>\n    <button id=\"Change\" mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Change</button>\n</div>","\r\nexport class PpPic {\r\n    public static validPpPics = [\"assets/IllegalPage/clown.png\", \"assets/IllegalPage/cry.png\", \"assets/IllegalPage/inconnu.png\"];\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tycoon',\n  templateUrl: './tycoon.component.html',\n  styleUrls: ['./tycoon.component.css']\n})\nexport class TycoonComponent {\n\n  constructor() { }\n\n}\n","<p>tycoon works!</p>\n","import { RedFlagsComponent } from \"src/app/components/games/cardgames/red-flags/red-flags.component\";\r\nimport { Type } from '@angular/core';\r\nimport { TycoonComponent } from \"src/app/components/games/cardgames/tycoon/tycoon.component\";\r\nimport { PokerComponent } from \"src/app/components/games/cardgames/poker/poker.component\";\r\n\r\nexport class Games {\r\n    private static gameStr = [\"Red Flags\", \"Tycoon\", \"Poker\"];\r\n    private static gameComp: Type<any>[] = [RedFlagsComponent, TycoonComponent, PokerComponent];\r\n\r\n    public static getGameStringArray() {\r\n        return Games.gameStr;\r\n    }\r\n\r\n    public static getGameCompFromString(text) {\r\n        for(var x = 0; x < this.gameStr.length; x++) {\r\n            if(this.gameStr[x] == text) {\r\n                return this.gameComp[x];\r\n            }\r\n        }\r\n        console.log(\"returning from text\");\r\n        return null;\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-leave',\n  templateUrl: './confirm-leave.component.html',\n  styleUrls: ['./confirm-leave.component.css']\n})\nexport class ConfirmLeaveComponent {\n\n  constructor(public dialogRef: MatDialogRef<ConfirmLeaveComponent>, @Inject(MAT_DIALOG_DATA) public data: boolean) { }\n\n}\n","\n<h1 mat-dialog-title>Are you sure you want to leave?</h1>\n\n<div mat-dialog-actions align=\"end\">\n    <button mat-button [mat-dialog-close]=\"false\">Cancel</button>\n    <button id=\"Leave\" mat-button [mat-dialog-close]=\"true\">Leave</button>\n</div>","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[appGame]'\n})\nexport class GameDirective {\n\n  constructor(public viewContainerRef: ViewContainerRef) { }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-failed-to-send-request',\n  templateUrl: './failed-to-send-request.component.html',\n  styleUrls: ['./failed-to-send-request.component.css']\n})\nexport class FailedToSendRequestComponent {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: string) { }\n\n}\n","<h1 mat-dialog-title>Opps something went wrong</h1>\n<mat-dialog-content>Unexpected request failed:<br>{{data}}</mat-dialog-content>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close>Okay</button>\n</mat-dialog-actions>","import { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ChangeNameComponent } from './components/dialogs/change-name/change-name.component';\nimport { InvalidNameComponent } from './components/dialogs/invalid-name/invalid-name.component';\nimport { PpPic } from 'src/app/models/pppics/PpPic';\nimport { ChangePPDialogComponent } from './components/dialogs/changepp/change-ppdialog/change-ppdialog.component';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { FailedToSendRequestComponent } from './components/dialogs/failed-to-send-request/failed-to-send-request.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public static LOCAL_USERNAME_STORE = \"GSUser\";\n  public static LOCAL_PP_STORE = \"GSPfp\";\n\n  title = 'Kyle\\'s Game Site';\n\n  UserName: string;\n  private inputField: string;\n  pp_pic: string = \"assets/IllegalPage/cry.png\";\n  private inputpp: number = 0;\n\n  constructor(private matDialog: MatDialog, private ref: ChangeDetectorRef, private router: Router) {\n    var str = localStorage.getItem(AppComponent.LOCAL_USERNAME_STORE);\n    var ppstr = localStorage.getItem(AppComponent.LOCAL_PP_STORE);\n    if (str == null || str == \"undefined\" || ppstr == null || ppstr == \"undefined\") {\n\n      console.log(\"Null User, generating\");\n      this.UserName = \"Guest\" + Math.floor(Math.random() * Math.floor(10000));\n      localStorage.setItem(AppComponent.LOCAL_USERNAME_STORE, this.UserName);\n\n      this.inputpp = 0;\n      this.pp_pic = PpPic.validPpPics[0];\n      localStorage.setItem(AppComponent.LOCAL_PP_STORE, \"0\");\n\n      //ref.detectChanges();\n    } else {\n      console.log(\"Name is \" + str);\n      this.UserName = str;\n\n      this.inputpp = parseInt(ppstr);\n      this.pp_pic = PpPic.validPpPics[this.inputpp];\n    }\n  }\n\n  changeNameButton() {\n    const dialogRef = this.matDialog.open(ChangeNameComponent, { data: { OldName: this.UserName, NewName: this.inputField, Cancelled: false } });\n\n    dialogRef.afterClosed().subscribe(result => {\n\n      if (!result.Cancelled) {\n        this.inputField = result.NewName;\n        this.changeName();\n      }\n    });\n  }\n\n  changePpButton() {\n    const dialogRef = this.matDialog.open(ChangePPDialogComponent, {data: {NewPP: this.inputpp, Cancelled: false}});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (!result.Cancelled) {\n        this.inputpp = result.NewPP;\n        this.changePp();\n        this.ref.detectChanges();\n      }\n    });\n  }\n\n  changeName() {\n    if (this.inputField != null && this.inputField != \"undefined\" && this.inputField != '') {\n      this.UserName = this.inputField;\n      this.inputField = '';\n      localStorage.setItem(AppComponent.LOCAL_USERNAME_STORE, this.UserName);\n    } else {\n      this.matDialog.open(InvalidNameComponent);\n    }\n  }\n\n  changePp() {\n    if (this.inputpp != null && this.inputpp >= 0) {\n      console.log(\"changed to \" + this.inputpp)\n      this.pp_pic = PpPic.validPpPics[this.inputpp];\n      localStorage.setItem(AppComponent.LOCAL_PP_STORE, this.inputpp.toString());\n    }\n  }\n\n\n}\n\nexport interface NameChangeData {\n  OldName: string;\n  NewName: string;\n  Cancelled: boolean;\n}\n\nexport interface PPChangeData {\n  NewPP: number;\n  Cancelled: boolean;\n}","<header>\n    <input type=\"image\" id=\"Logo\" src=\"assets/global/Logo.png\" routerLink=\"/\">\n\n    <div id=\"ButtonArea\">\n        <button id=\"RoomButton\" routerLink=\"/rooms\" mat-raised-button>Rooms</button>\n        <button id=\"RoomButton\" routerLink=\"/create\" mat-raised-button>Create Room</button>\n        <button id=\"RoomButton\" routerLink=\"/external/restaurant\" mat-raised-button>Restaurant World</button>\n    </div>\n\n    <form id=\"Login-Group\">\n        <label class=\"login-comp\">Logged In as: {{UserName}}</label>\n        <button type=\"button\" id=\"CNButton\" class=\"login-comp\" [matMenuTriggerFor]=\"Avatar\">\n            <!-- Change Name -->\n            <img src={{pp_pic}}>\n        </button>\n        <mat-menu #Avatar='matMenu' xPosition=\"before\">\n            <button mat-menu-item (click)=\"changeNameButton()\">Change Name</button>\n            <button mat-menu-item (click)=\"changePpButton()\">Change PP</button>\n        </mat-menu>\n    </form>\n</header>\n<div id=\"routerContents\">\n    <router-outlet id=\"router\"></router-outlet>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-illegal-page',\n  templateUrl: './illegal-page.component.html',\n  styleUrls: ['./illegal-page.component.css']\n})\nexport class IllegalPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>OPPSIE PAGE NOT FOUND</h1>\n<img src=\"assets/IllegalPage/cry.png\">\n<h2>We are sorry</h2>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-invalid-name',\n  templateUrl: './invalid-name.component.html',\n  styleUrls: ['./invalid-name.component.css']\n})\nexport class InvalidNameComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Invalid Input</h1>\n<p>The name you put cannot be blank or undefined</p>\n<mat-dialog-actions align=\"end\">\n    <button mat-button mat-dialog-close>Ok</button>\n</mat-dialog-actions>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { TestPageComponent } from './components/test-page/test-page.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatInputModule } from '@angular/material/input';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InvalidNameComponent } from './components/dialogs/invalid-name/invalid-name.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RedFlagsComponent } from './components/games/cardgames/red-flags/red-flags.component';\nimport { IllegalPageComponent } from './components/illegal-page/illegal-page.component';\nimport { ChangeNameComponent } from './components/dialogs/change-name/change-name.component';\nimport { RoomSelectorComponent } from './components/games/room-selector/room-selector.component';\nimport { RoomCreatorComponent } from './components/games/room-creator/room-creator.component';\nimport { GamePageComponent } from './components/games/game-page/game-page.component';\nimport { SocketIoModule, SocketIoConfig } from 'ngx-socket-io';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ChangePPDialogComponent } from './components/dialogs/changepp/change-ppdialog/change-ppdialog.component';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { FailedToSendRequestComponent } from './components/dialogs/failed-to-send-request/failed-to-send-request.component';\nimport { GameDirective } from './directives/game.directive';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { SpectatorJoinComponent } from './components/dialogs/GameDialogs/spectator-join/spectator-join.component';\nimport { SpecOrPlayComponent } from './components/dialogs/GameDialogs/spec-or-play/spec-or-play.component';\nimport { ConfirmLeaveComponent } from './components/dialogs/GameDialogs/confirm-leave/confirm-leave.component';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { SingleInputDialogComponent } from './components/dialogs/GameDialogs/single-input-dialog/single-input-dialog.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { TycoonComponent } from './components/games/cardgames/tycoon/tycoon.component';\nimport { PokerComponent } from './components/games/cardgames/poker/poker.component';\nimport { RedirectPageComponent } from './components/redirect-page/redirect-page.component';\n\nconst config: SocketIoConfig = {\n  url: \"http://\" + window.location.hostname + \":3000\", options: {\n    cors: {\n      origin: \"*\",\n      methods: [\"GET\", \"POST\"]\n    }\n  }\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomePageComponent,\n    TestPageComponent,\n    InvalidNameComponent,\n    RedFlagsComponent,\n    IllegalPageComponent,\n    ChangeNameComponent,\n    RoomSelectorComponent,\n    RoomCreatorComponent,\n    GamePageComponent,\n    ChangePPDialogComponent,\n    FailedToSendRequestComponent,\n    GameDirective,\n    SpectatorJoinComponent,\n    SpecOrPlayComponent,\n    ConfirmLeaveComponent,\n    SingleInputDialogComponent,\n    TycoonComponent,\n    PokerComponent,\n    RedirectPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    MatIconModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatInputModule,\n    MatDialogModule,\n    SocketIoModule.forRoot(config),\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatRadioModule,\n    MatSidenavModule,\n    MatBadgeModule,\n    MatDividerModule,\n    MatListModule,\n    MatButtonToggleModule,\n    MatCheckboxModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent {\n\n  constructor() {}\n\n}\n","<h1>Welcome to Kassie's Lounge</h1>\n<h2>The place where things always go wrong</h2>\n<h5>Any complaints can go to the trash can</h5>\n<div id=\"ImgContainer\">\n    <img src=\"assets/home/thumbs.jpg\">\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-test-page',\n  templateUrl: './test-page.component.html',\n  styleUrls: ['./test-page.component.css']\n})\nexport class TestPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>test-page works!</p>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-single-input-dialog',\n  templateUrl: './single-input-dialog.component.html',\n  styleUrls: ['./single-input-dialog.component.css']\n})\nexport class SingleInputDialogComponent {\n\n  constructor(public dialogRef: MatDialogRef<SingleInputDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: {title: string, output: string, cancel: boolean}) { }\n\n  onCancel() {\n    this.data.cancel = true;\n    this.dialogRef.close(this.data);\n  }\n\n  onSubmit() {\n    this.data.cancel = false;\n    this.dialogRef.close(this.data);\n  }\n\n}\n","\n<h1 mat-dialog-title>{{data.title}}</h1>\n\n<mat-dialog-content>\n    <mat-form-field>\n        <mat-label>Change Name Here</mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"data.output\" [ngModelOptions]=\"{standalone: true}\">\n        <button type=\"button\" mat-button *ngIf=\"data.output\" matSuffix mat-icon-button aria-label=\"Clear\"\n            (click)=\"data.output=''\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n</mat-dialog-content>\n<div mat-dialog-actions align=\"end\">\n    <button mat-button (click)=\"onCancel()\">Cancel</button>\n    <button id=\"Change\" mat-button (click)=\"onSubmit()\" cdkFocusInitial>Submit</button>\n</div>","import { Injectable } from '@angular/core';\nimport { Socket } from 'ngx-socket-io';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketsService {\n\n  constructor(private socket: Socket) { }\n\n  public sendMessage(channel, data) {\n    this.socket.emit(channel, data);\n  }\n\n  public setlistener(channel, clbk) {\n    this.socket.on(channel, result => {\n      clbk(result);\n    })\n  }\n\n  public removelistener(channel) {\n    this.socket.removeListener(channel);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-redirect-page',\n  templateUrl: './redirect-page.component.html',\n  styleUrls: ['./redirect-page.component.css']\n})\nexport class RedirectPageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n    window.location.reload();\n  }\n\n}\n","<p>redirect-page works!</p>\n","import { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from \"@angular/router\";\nimport { Games } from 'src/app/models/games/Games';\nimport { SocketsService } from 'src/app/services/sockets.service';\nimport { FailedToSendRequestComponent } from '../../dialogs/failed-to-send-request/failed-to-send-request.component';\n\n@Component({\n  selector: 'app-room-creator',\n  templateUrl: './room-creator.component.html',\n  styleUrls: ['./room-creator.component.css']\n})\nexport class RoomCreatorComponent {\n\n  gameOptions = Games.getGameStringArray();\n\n  gametype: FormControl = new FormControl('', [\n    Validators.required,\n  ]);\n  maxPlayers: FormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\"),\n    Validators.max(20),\n    Validators.min(1)\n  ]);\n\n  sentRequest: boolean = false;\n\n  constructor(private sockets: SocketsService, private dialog: MatDialog, private router: Router) { }\n\n  buttonClick() {\n    console.log(this.gametype.value);\n    if (this.gametype.invalid || this.maxPlayers.invalid) {\n      console.log(\"Invalid input\");\n      this.gametype.markAsTouched();\n      this.maxPlayers.markAsTouched();\n      return;\n    }\n\n    //send request\n    this.sentRequest = true;\n\n    var reqId = Math.floor(Math.random() * Math.floor(1000000));\n    this.sockets.sendMessage(\"createroom\",\n      {\n        game: this.gametype.value,\n        max: this.maxPlayers.value,\n        tempId: reqId\n      }\n    );\n\n    var self = this;\n\n    this.sockets.setlistener(\"roomres\" + reqId, function (data) {\n      if (!data.success) {\n        const dialogref = self.dialog.open(FailedToSendRequestComponent, { data: \"Server denied request due to: \" + data.error });\n        dialogref.afterClosed().subscribe(result => {\n          self.router.navigate([''])\n        });\n      } else {\n        self.router.navigate(['game'], {\n          queryParams: {\n            r: data.id\n          }\n        });\n      }\n    });\n  }\n\n}\n","<div id=\"CreationSettings\">\n    <h4>Game</h4>\n    <mat-form-field appearance=\"fill\">\n        <mat-label>Choose Game</mat-label>\n        <mat-select [formControl]=\"gametype\" [disabled]=\"sentRequest\">\n            <mat-option *ngFor=\"let g of gameOptions\" value={{g}}>{{g}}</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"maxPlayers.hasError('required')\">\n            <strong>required*</strong>\n        </mat-error>\n    </mat-form-field>\n    <br/>\n    <mat-form-field>\n        <mat-label>Max Players</mat-label>\n        <input type=\"text\" matInput [formControl]=\"maxPlayers\" placeholder=\"Ex. 5\" [disabled]=\"sentRequest\">\n        <mat-hint>Max value of 20 only</mat-hint>\n        <mat-error *ngIf=\"maxPlayers.hasError('max')\">\n            Max value of 20 is only accepted\n        </mat-error>\n        <mat-error *ngIf=\"maxPlayers.hasError('pattern')\">\n            Please enter a valid number\n        </mat-error>\n        <mat-error *ngIf=\"maxPlayers.hasError('required')\">\n            value is <strong>required*</strong>\n        </mat-error>\n    </mat-form-field>\n</div>\n<button mat-raised-button (click)=\"buttonClick()\" [disabled]=\"sentRequest\">Create Room</button>\n<mat-spinner *ngIf=\"sentRequest\" style=\"margin-left: 5%!important;margin-top: 40px!important;\"></mat-spinner>","import { Component } from '@angular/core';\nimport { SocketsService } from 'src/app/services/sockets.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { RoomCreatorComponent } from '../room-creator/room-creator.component';\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-room-selector',\n  templateUrl: './room-selector.component.html',\n  styleUrls: ['./room-selector.component.css']\n})\nexport class RoomSelectorComponent {\n\n  results: number = -1;\n  entries: roomData[];\n\n  constructor(private socketServe: SocketsService, private matDialog: MatDialog, private router: Router) { \n    var self = this;\n\n    this.entries = [];\n\n    socketServe.setlistener(\"rooms\", function(result) {\n      self.entries = result;\n      self.results = result.length;\n      self.socketServe.removelistener(\"rooms\");\n    })\n\n    socketServe.sendMessage(\"getRooms\", null);\n    \n  }\n\n  joinRoom(id: number) {\n    console.log(\"Trying to join room \" + id);\n    this.router.navigate([\"game\"], {\n      queryParams: {\n        r: id\n      }\n    });\n  }\n\n  CreateRoomDialog() {\n    this.matDialog.open(RoomCreatorComponent);\n  }\n\n}\n\nexport interface roomData {\n  roomId: number\n  roomType: string\n  numPlayers: number\n  maxPlayers: number\n  inProgress: boolean\n}","<div id=\"ResultBar\">\n    <p> Found {{results}} results</p>\n    <div id=\"buttonContainer\">\n        <button id=\"createButton\" mat-mini-fab (click)=\"CreateRoomDialog()\">\n            <mat-icon>add</mat-icon>\n        </button>\n    </div>\n</div>\n<div class=\"NoResultElement\" *ngIf=\"results == 0\">\n    <div id=\"NRText\">\n        <p>No Results found</p>\n        <p>Sorry!</p>\n        <img id=\"NoResultImg\" src=\"assets/IllegalPage/clown.png\">\n    </div>\n</div>\n<div class=\"NoResultElement\" *ngIf=\"results == -1\">\n    <div id=\"NRText\">\n        <p>Trying to load results</p>\n        <mat-spinner></mat-spinner>\n    </div>\n</div>\n<div id=\"ResultBlockContainer\" *ngIf=\"results > 0\">\n    <table class=\"Resultblock\">\n        <tr class=\"Header\">\n            <th >Room Id</th>\n            <th >Game</th>\n            <th >Players</th>\n            <th >Status</th>\n            <th >Join</th>\n        </tr>\n        <tr class=\"resultElement\" *ngFor=\"let r of entries\">\n            <th>{{r.roomId}}</th>\n            <th>{{r.roomType}}</th>\n            <th>{{r.numPlayers}}/{{r.maxPlayers}}</th>\n            <th [ngClass]=\"{'thtrue': r.inProgress, 'thfalse': !r.inProgress}\">\n                <span *ngIf=\"r.inProgress\">Game Started</span>\n                <span *ngIf=\"!r.inProgress\">Waiting to start...</span>\n            </th>\n            <th>\n                <button class=\"JoinButton\" (click)=\"joinRoom(r.roomId)\" mat-raised-button>Join Room</button>\n            </th>\n        </tr>\n    </table>\n</div>","\r\nexport class Queue<T> {\r\n    \r\n    public data: T[] = [];\r\n    \r\n    addbeginning(v: T) {\r\n        this.data.unshift(v);\r\n    }\r\n\r\n    addEnd(v: T) {\r\n        this.data.push(v);\r\n    }\r\n\r\n    peekBeginning(): T {\r\n        return this.data[0];\r\n    }\r\n\r\n    peekEnd(): T{\r\n        return this.data[this.data.length-1];\r\n    }\r\n\r\n    popBeginning(): T {\r\n        return this.data.shift();\r\n    }\r\n\r\n    popEnd(): T {\r\n        return this.data.pop();\r\n    }\r\n\r\n    size(): number {\r\n        return this.data.length;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spectator-join',\n  templateUrl: './spectator-join.component.html',\n  styleUrls: ['./spectator-join.component.css']\n})\nexport class SpectatorJoinComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Spectator!</h1>\n<p>You joined the game as a spectator</p>\n<mat-dialog-actions>\n    <button mat-button mat-dialog-close>Okay</button>\n</mat-dialog-actions>","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-spec-or-play',\n  templateUrl: './spec-or-play.component.html',\n  styleUrls: ['./spec-or-play.component.css']\n})\nexport class SpecOrPlayComponent {\n\n  constructor(public dialogRef: MatDialogRef<SpecOrPlayComponent>, @Inject(MAT_DIALOG_DATA) public data: boolean) { }\n\n}\n","<h1 mat-dialog-title>Join as Spectator or Player</h1>\n\n<button id=\"spec\" mat-button [mat-dialog-close]=\"false\">Spectate</button>\n<button id=\"play\" mat-button [mat-dialog-close]=\"true\">Play</button>","import {\n  Component,\n  ViewChild,\n  ComponentFactoryResolver,\n  Type,\n  ElementRef\n} from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\nimport { Queue } from 'src/app/datastructures/Queue';\nimport { GameDirective } from 'src/app/directives/game.directive';\nimport { Games } from 'src/app/models/games/Games';\nimport { PpPic } from 'src/app/models/pppics/PpPic';\nimport { GamerequestsService } from 'src/app/services/game/gamerequests.service';\nimport { SocketsService } from 'src/app/services/sockets.service';\nimport { FailedToSendRequestComponent } from '../../dialogs/failed-to-send-request/failed-to-send-request.component';\nimport { ConfirmLeaveComponent } from '../../dialogs/GameDialogs/confirm-leave/confirm-leave.component';\n\n@Component({\n  selector: 'app-game-page',\n  templateUrl: './game-page.component.html',\n  styleUrls: ['./game-page.component.css'],\n  host: {\n    class: 'GamePage'\n  }\n})\nexport class GamePageComponent {\n\n  static MAX_MSGS = 100;\n\n  allowedPpPicsArray = PpPic.validPpPics;\n\n  roomId: number;\n  hidden: boolean = true;\n  chatUnread: number = 0;\n\n  textBoxData: string;\n\n  chatMsgs: Queue<ChatMessage>;\n\n  @ViewChild(GameDirective, {\n    static: true\n  }) appGame: GameDirective;\n  interval: any;\n\n  @ViewChild(\"drawer\")\n  chatNav: MatSidenav;\n\n  @ViewChild(\"chatCom\")\n  chatComp: ElementRef;\n\n  constructor(private route: ActivatedRoute, private factoryResolver: ComponentFactoryResolver,\n    private socket: SocketsService, private router: Router,\n    private dialog: MatDialog, private gr: GamerequestsService) {\n\n    this.route.queryParams\n      .subscribe(params => {\n        this.roomId = params.r;\n      });\n\n    var self = this;\n\n    socket.sendMessage(\"GET roomData\", this.roomId);\n    socket.setlistener(\"RoomInfo\", function (result) {\n      if (result.success) {\n        self.addGameElement(Games.getGameCompFromString(result.roomType))\n      } else {\n        dialog.open(FailedToSendRequestComponent, { data: \"Room cannot be found\" });\n        router.navigate([\"\"]);\n      }\n      socket.removelistener(\"RoomInfo\");\n    });\n\n    this.chatMsgs = new Queue();\n\n    socket.setlistener(\"chat\" + this.roomId.toString(), function (data) {\n      self.chatMsgs.addEnd(data);\n\n      if (self.chatMsgs.size() > GamePageComponent.MAX_MSGS) {\n        self.chatMsgs.popBeginning();\n      }\n\n      if (!self.chatNav.opened) {\n        self.chatUnread++;\n        self.hidden = false;\n        console.log(\"Unread\");\n      }\n\n      setTimeout(function() {\n        self.chatComp.nativeElement.scrollTop = self.chatComp.nativeElement.scrollHeight;\n      }, 10);\n    });\n  }\n\n  addGameElement(component: Type<any>) {\n    console.log(\"adding component\")\n    const factory = this.factoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.appGame.viewContainerRef;\n    viewContainerRef.clear();\n\n    viewContainerRef.createComponent<any>(factory);\n  }\n\n  sendChatMsg() {\n    if (this.textBoxData != null || this.textBoxData != undefined) {\n      this.textBoxData = this.textBoxData.trim();\n      if (this.textBoxData != \"\") {\n        var pppic = localStorage.getItem(AppComponent.LOCAL_PP_STORE);\n        var nameVal = localStorage.getItem(AppComponent.LOCAL_USERNAME_STORE);\n\n        console.log(\"sent\");\n        this.socket.sendMessage(\"POST chat\", { rid: this.roomId, pp: pppic, name: nameVal, msg: this.textBoxData });\n\n        this.textBoxData = \"\";\n      }\n    }\n  }\n\n  leaveGame() {\n    this.dialog.open(ConfirmLeaveComponent, { data: false }).afterClosed().subscribe(result => {\n      if (result) {\n        this.gr.promptLeaveGame(this.gr.getPid());\n        this.router.navigate([\"\"]);\n      }\n    });\n  }\n\n  toggleChat() {\n    this.chatNav.toggle();\n    this.hidden = true;\n\n    if (this.chatUnread > 0) {\n      setTimeout(function() {\n        this.chatComp.nativeElement.scrollTop = this.chatComp.nativeElement.scrollHeight;\n      }, 10);\n    }\n\n    this.chatUnread = 0;\n  }\n\n  onKeydownText(event) {\n    event.preventDefault();\n  }\n\n}\n\nexport class ChatMessage {\n  rid: number\n  pp: number\n  name: string\n  msg: string\n}\n","<mat-drawer-container autosize style=\"background-color: white;\">\n\n    <button id=\"drawButtonLeft\" (click)=\"leaveGame()\" mat-raised-button>Leave Room</button>\n\n    <mat-drawer #drawer mode=\"side\" position=\"end\" id=\"ChatBox\">\n        <div #chatCom id=\"chatArea\">\n            <div class=\"textmsg\" *ngFor=\"let m of chatMsgs.data\">\n                <img src={{allowedPpPicsArray[m.pp]}}><strong>&nbsp;{{m.name}}&nbsp;</strong>\n                <span>{{m.msg}}</span>\n            </div>\n        </div>\n        \n        <form id=\"chatform\" (keydown.enter)=\"sendChatMsg()\">\n            <mat-form-field id=\"textareachat\">\n                <textarea matInput (keydown.enter)=\"onKeydownText($event)\" [(ngModel)]=\"textBoxData\" placeholder=\"Send a Message\" style=\"resize: none; background-color: #ebebeb; height: 50px;\" [ngModelOptions]=\"{standalone: true}\"></textarea>\n            </mat-form-field>\n            <button class=\"orangeButton\" mat-raised-button (click)=\"sendChatMsg()\">Send</button>\n        </form>\n\n    </mat-drawer>\n\n    <button id=\"drawButtonRight\" (click)=\"toggleChat()\" mat-icon-button>\n        <mat-icon class=\"whiteicon\" [(matBadge)]=\"chatUnread\" matBadgeColor=\"warn\" [(matBadgeHidden)]=\"hidden\">chat</mat-icon>\n    </button>\n\n    <div id=\"GameArea\">\n        <ng-template appGame></ng-template>\n    </div>    \n</mat-drawer-container>\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NameChangeData } from 'src/app/app.component';\n\n@Component({\n  selector: 'app-change-name',\n  templateUrl: './change-name.component.html',\n  styleUrls: ['./change-name.component.css']\n})\nexport class ChangeNameComponent {\n\n  title = 'ChangeName';\n\n  inputField: string;\n\n  constructor(public dialogRef: MatDialogRef<ChangeNameComponent>, @Inject(MAT_DIALOG_DATA) public data: NameChangeData) { }\n\n  onCancel(): void {\n    this.data.Cancelled = true;\n    this.dialogRef.close(this.data);\n  }\n\n}\n","<h1 mat-dialog-title>Change Name</h1>\n<mat-dialog-content>\n    <mat-form-field id=\"ChangeNameField\">\n        <mat-label>Change Name Here</mat-label>\n        <input matInput type=\"text\" [(ngModel)]=\"data.NewName\" [ngModelOptions]=\"{standalone: true}\">\n        <button type=\"button\" mat-button *ngIf=\"data.NewName\" matSuffix mat-icon-button aria-label=\"Clear\"\n            (click)=\"data.NewName=''\">\n            <mat-icon>close</mat-icon>\n        </button>\n    </mat-form-field>\n</mat-dialog-content>\n<div mat-dialog-actions align=\"end\">\n    <button mat-button (click)=\"onCancel()\">Cancel</button>\n    <button id=\"Change\" mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Change</button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-poker',\n  templateUrl: './poker.component.html',\n  styleUrls: ['./poker.component.css']\n})\nexport class PokerComponent {\n\n  players: { name: string, curBal: number, curBet: number, turn: boolean }[] = [\n    { name: \"Player\", curBal: 500, curBet: 500, turn: true },\n    { name: \"Player\", curBal: 500, curBet: 500, turn: false },\n    { name: \"Player\", curBal: 500, curBet: 500, turn: false },\n    { name: \"Player\", curBal: 500, curBet: 500, turn: false },\n  ];\n\n  cards: { suit: string, value: number }[] = [\n    { suit: \"D\", value: 3 },\n    { suit: \"S\", value: 10 },\n    { suit: \"C\", value: 13 },\n    { suit: \"H\", value: 1 },\n    { suit: \"D\", value: 7 }\n  ]\n  centerCards: {card:{ suit: string, value: number }, shouldShow:boolean}[] = [\n    {card:{ suit: \"D\", value: 3 }, shouldShow: true},\n    {card:{ suit: \"S\", value: 10 }, shouldShow: false},\n    {card:{ suit: \"C\", value: 13 }, shouldShow: true},\n    {card:{ suit: \"H\", value: 1 }, shouldShow: true},\n    {card:{ suit: \"D\", value: 7 }, shouldShow: false}\n  ];\n\n  currentBet: number = 5;\n  playerBet: number = 5;\n  newBet: number = 5;\n\n  isBetting: boolean = true;\n\n  started: boolean = true;\n\n  constructor() { }\n\n  getCardImgSrc(c: { suit: string, value: number }) {\n    return \"assets/games/traddeck/\" + c.value.toString() + c.suit + \".png\";\n  }\n\n  getCardImgSrcShow(c: { suit: string, value: number }, show: boolean) {\n    if(show) {\n      return this.getCardImgSrc(c);\n    } else {\n      return \"assets/games/traddeck/red_back.png\";\n    }\n  }\n\n}\n","<div id=\"PlayerArea\">\n    <div class=\"playerListing\" *ngFor=\"let p of players\" [ngClass]=\"{'turn': p.turn}\">\n        <p>\n            Name: {{p.name}}<br>\n            Balance: {{p.curBal}}<br>\n            Bet: {{p.curBet}}\n        </p>\n    </div>\n</div>\n\n<div id=\"CenterArea\" *ngIf=\"started\">\n    <h2>Jackpot<br>$9999</h2>\n    <div id=\"DealtCards\">\n        <img *ngFor=\"let c of centerCards\" [src]=\"getCardImgSrcShow(c.card, c.shouldShow)\">\n    </div>\n</div>\n\n<div id=\"CenterArea\" *ngIf=\"!started\">\n    \n</div>\n\n<div id=\"HandArea\">\n\n    <table id=\"BetArea\" *ngIf=\"isBetting\">\n        <tr class=\"colRow\">\n            <td class=\"colDisp\">\n                <div class=\"fillfull\">\n                    <h3>Current Bet</h3>\n                    <p class=\"moneyVal\">${{currentBet}}</p>\n                    <button mat-raised-button class=\"HandButton\">Match</button>\n                </div>\n            </td>\n            <td class=\"colDisp\">\n                <div class=\"fillfull\">\n                    <h3>Your Bet</h3>\n                    <p class=\"moneyVal\">${{playerBet}}</p>\n                </div>\n            </td>\n            <td class=\"colDisp\">\n                <div class=\"fillfull\">\n                    <h3>New Bet</h3>\n                    <p class=\"moneyVal\">${{newBet}}</p>\n                    <button mat-raised-button class=\"HandButton\">Raise</button>\n                </div>\n            </td>\n            <td class=\"colDisp\">\n                <div class=\"fillfull\">\n                    <button mat-raised-button class=\"betButton\">+1</button>\n                    <button mat-raised-button class=\"betButton\">+5</button><br>\n                    <button mat-raised-button class=\"betButton\">+10</button>\n                    <button mat-raised-button class=\"betButton\">+25</button><br>\n                    <button mat-raised-button class=\"betButton\">+50</button>\n                    <button mat-raised-button class=\"betButton\">+100</button>\n                </div>\n            </td>\n            <td class=\"colDisp\">\n                <div class=\"fillfull\">\n                    <button mat-raised-button class=\"HandButton\">Fold</button>\n                    <button mat-raised-button class=\"HandButton\">Check</button>\n                </div>\n            </td>\n        </tr>\n    </table>\n\n    <div id=\"BetArea\" *ngIf=\"!isBetting\">\n        <h2>Its not your turn to bet</h2>\n    </div>\n\n    <table id=\"Hand\">\n        <tr>\n            <td>\n                <img *ngFor=\"let c of cards\" [src]=\"getCardImgSrc(c)\">\n            </td>\n        </tr>\n    </table>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePageComponent } from 'src/app/components/home-page/home-page.component';\nimport { ChangeNameComponent } from './components/dialogs/change-name/change-name.component';\nimport { GamePageComponent } from './components/games/game-page/game-page.component';\nimport { RoomCreatorComponent } from './components/games/room-creator/room-creator.component';\nimport { RoomSelectorComponent } from './components/games/room-selector/room-selector.component';\nimport { IllegalPageComponent } from './components/illegal-page/illegal-page.component';\nimport { RedirectPageComponent } from './components/redirect-page/redirect-page.component';\n\nconst routes: Routes = [\n  {path: \"\", component: HomePageComponent}, \n  {path: \"rooms\", component: RoomSelectorComponent},\n  {path: \"create\", component: RoomCreatorComponent},\n  {path: \"game\", component: GamePageComponent},\n  \n  {path: \"debug/testpage\", component: ChangeNameComponent},\n\n  {path:\"external/**\", component:RedirectPageComponent},\n  {path: \"**\", component: IllegalPageComponent}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SocketsService } from '../sockets.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GamerequestsService {\n\n  LOCALSTORAGE_GAME_ID_STORE: string = \"GameSiteRoomData\";\n\n  roomId: number\n  localStorageData: LocalStorageData;\n\n  constructor(private socket: SocketsService) { \n  }\n\n  //true if should instant join\n  //false if should send a request\n  setup(roomId: number): boolean {\n    this.roomId = roomId;\n    this.localStorageData = JSON.parse(localStorage.getItem(this.LOCALSTORAGE_GAME_ID_STORE));\n    return (this.localStorageData != null && this.localStorageData.roomid == roomId);\n  }\n\n  setStorage(pid: number) {\n    this.localStorageData = {roomid: this.roomId, playerid: pid};\n    localStorage.setItem(this.LOCALSTORAGE_GAME_ID_STORE, JSON.stringify(this.localStorageData));\n  }\n\n  getPid(): number {\n    return this.localStorageData.playerid;\n  }\n\n  //true if can send join request\n  //false if cannot send join request\n  requestJoinDetails(clbk) {\n    var self = this;\n    this.socket.sendMessage(\"POST JoinDetails\", this.roomId);\n    this.socket.setlistener(\"RoomDetails\", function(response) {\n      self.socket.removelistener(\"RoomDetails\");\n      clbk(response);\n    });\n  }\n\n  requestJoin(clbk) {\n    var self = this;\n    this.socket.sendMessage(\"POST JoinGame\", this.roomId);\n    this.socket.setlistener(\"JoinRequestResponse\", function(response) {\n      self.socket.removelistener(\"JoinRequestResponse\");\n      clbk(response);\n    });\n  }\n\n  promptLeaveGame(pid: number) {\n    this.socket.sendMessage(\"HandleLeave\", {roomId: this.roomId, playerId: pid});\n    this.localStorageData = null;\n    localStorage.setItem(this.LOCALSTORAGE_GAME_ID_STORE, null);\n  }\n\n  startWatch(clbk) {\n    this.socket.setlistener(\"GameChannel\" + this.roomId.toString(), clbk);\n  }\n\n  requestUpdate() {\n    this.socket.sendMessage(\"POST EmitGameUpdate\", this.roomId);\n  }\n\n  sendData(data) {\n    this.socket.sendMessage(\"POST gamedata\", data);\n  } \n\n  requestPrivateUpdate(pid) {\n    console.log(\"request\");\n    this.socket.sendMessage(\"POST EmitPrivateUpdate\", {rid: this.roomId, pid: pid});\n  }\n\n  startWatchPrivate(clbk) {\n    this.socket.setlistener(\"PrivateData\", clbk);\n  }\n\n}\n\nexport class LocalStorageData {\n  roomid: number\n  playerid: number\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}